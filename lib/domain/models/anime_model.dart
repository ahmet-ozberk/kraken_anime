///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class AnimeModelDemographics {
  int? malId;
  String? type;
  String? name;
  String? url;

  AnimeModelDemographics({
    this.malId,
    this.type,
    this.name,
    this.url,
  });
  AnimeModelDemographics.fromJson(Map<String, dynamic> json) {
    malId = json['mal_id']?.toInt();
    type = json['type']?.toString();
    name = json['name']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['mal_id'] = malId;
    data['type'] = type;
    data['name'] = name;
    data['url'] = url;
    return data;
  }
}

class AnimeModelGenres {
  int? malId;
  String? type;
  String? name;
  String? url;

  AnimeModelGenres({
    this.malId,
    this.type,
    this.name,
    this.url,
  });
  AnimeModelGenres.fromJson(Map<String, dynamic> json) {
    malId = json['mal_id']?.toInt();
    type = json['type']?.toString();
    name = json['name']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['mal_id'] = malId;
    data['type'] = type;
    data['name'] = name;
    data['url'] = url;
    return data;
  }
}

class AnimeModelStudios {
  int? malId;
  String? type;
  String? name;
  String? url;

  AnimeModelStudios({
    this.malId,
    this.type,
    this.name,
    this.url,
  });
  AnimeModelStudios.fromJson(Map<String, dynamic> json) {
    malId = json['mal_id']?.toInt();
    type = json['type']?.toString();
    name = json['name']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['mal_id'] = malId;
    data['type'] = type;
    data['name'] = name;
    data['url'] = url;
    return data;
  }
}

class AnimeModelProducers {
  int? malId;
  String? type;
  String? name;
  String? url;

  AnimeModelProducers({
    this.malId,
    this.type,
    this.name,
    this.url,
  });
  AnimeModelProducers.fromJson(Map<String, dynamic> json) {
    malId = json['mal_id']?.toInt();
    type = json['type']?.toString();
    name = json['name']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['mal_id'] = malId;
    data['type'] = type;
    data['name'] = name;
    data['url'] = url;
    return data;
  }
}

class AnimeModelBroadcast {
  String? day;
  String? time;
  String? timezone;
  String? string;

  AnimeModelBroadcast({
    this.day,
    this.time,
    this.timezone,
    this.string,
  });
  AnimeModelBroadcast.fromJson(Map<String, dynamic> json) {
    day = json['day']?.toString();
    time = json['time']?.toString();
    timezone = json['timezone']?.toString();
    string = json['string']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['day'] = day;
    data['time'] = time;
    data['timezone'] = timezone;
    data['string'] = string;
    return data;
  }
}

class AnimeModelAiredPropTo {
  int? day;
  int? month;
  int? year;

  AnimeModelAiredPropTo({
    this.day,
    this.month,
    this.year,
  });
  AnimeModelAiredPropTo.fromJson(Map<String, dynamic> json) {
    day = json['day']?.toInt();
    month = json['month']?.toInt();
    year = json['year']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['day'] = day;
    data['month'] = month;
    data['year'] = year;
    return data;
  }
}

class AnimeModelAiredPropFrom {
  int? day;
  int? month;
  int? year;

  AnimeModelAiredPropFrom({
    this.day,
    this.month,
    this.year,
  });
  AnimeModelAiredPropFrom.fromJson(Map<String, dynamic> json) {
    day = json['day']?.toInt();
    month = json['month']?.toInt();
    year = json['year']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['day'] = day;
    data['month'] = month;
    data['year'] = year;
    return data;
  }
}

class AnimeModelAiredProp {
  AnimeModelAiredPropFrom? from;
  AnimeModelAiredPropTo? to;

  AnimeModelAiredProp({
    this.from,
    this.to,
  });
  AnimeModelAiredProp.fromJson(Map<String, dynamic> json) {
    from = (json['from'] != null)
        ? AnimeModelAiredPropFrom.fromJson(json['from'])
        : null;
    to = (json['to'] != null)
        ? AnimeModelAiredPropTo.fromJson(json['to'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (from != null) {
      data['from'] = from!.toJson();
    }
    if (to != null) {
      data['to'] = to!.toJson();
    }
    return data;
  }
}

class AnimeModelAired {
  String? from;
  String? to;
  AnimeModelAiredProp? prop;
  String? string;

  AnimeModelAired({
    this.from,
    this.to,
    this.prop,
    this.string,
  });
  AnimeModelAired.fromJson(Map<String, dynamic> json) {
    from = json['from']?.toString();
    to = json['to']?.toString();
    prop = (json['prop'] != null)
        ? AnimeModelAiredProp.fromJson(json['prop'])
        : null;
    string = json['string']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['from'] = from;
    data['to'] = to;
    if (prop != null) {
      data['prop'] = prop!.toJson();
    }
    data['string'] = string;
    return data;
  }
}

class AnimeModelTitles {
  String? type;
  String? title;

  AnimeModelTitles({
    this.type,
    this.title,
  });
  AnimeModelTitles.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    title = json['title']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['title'] = title;
    return data;
  }
}

class AnimeModelTrailerImages {
  String? imageUrl;
  String? smallImageUrl;
  String? mediumImageUrl;
  String? largeImageUrl;
  String? maximumImageUrl;

  AnimeModelTrailerImages({
    this.imageUrl,
    this.smallImageUrl,
    this.mediumImageUrl,
    this.largeImageUrl,
    this.maximumImageUrl,
  });
  AnimeModelTrailerImages.fromJson(Map<String, dynamic> json) {
    imageUrl = json['image_url']?.toString();
    smallImageUrl = json['small_image_url']?.toString();
    mediumImageUrl = json['medium_image_url']?.toString();
    largeImageUrl = json['large_image_url']?.toString();
    maximumImageUrl = json['maximum_image_url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['image_url'] = imageUrl;
    data['small_image_url'] = smallImageUrl;
    data['medium_image_url'] = mediumImageUrl;
    data['large_image_url'] = largeImageUrl;
    data['maximum_image_url'] = maximumImageUrl;
    return data;
  }
}

class AnimeModelTrailer {
  String? youtubeId;
  String? url;
  String? embedUrl;
  AnimeModelTrailerImages? images;

  AnimeModelTrailer({
    this.youtubeId,
    this.url,
    this.embedUrl,
    this.images,
  });
  AnimeModelTrailer.fromJson(Map<String, dynamic> json) {
    youtubeId = json['youtube_id']?.toString();
    url = json['url']?.toString();
    embedUrl = json['embed_url']?.toString();
    images = (json['images'] != null)
        ? AnimeModelTrailerImages.fromJson(json['images'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['youtube_id'] = youtubeId;
    data['url'] = url;
    data['embed_url'] = embedUrl;
    if (images != null) {
      data['images'] = images!.toJson();
    }
    return data;
  }
}

class AnimeModelImagesWebp {
  String? imageUrl;
  String? smallImageUrl;
  String? largeImageUrl;

  AnimeModelImagesWebp({
    this.imageUrl,
    this.smallImageUrl,
    this.largeImageUrl,
  });
  AnimeModelImagesWebp.fromJson(Map<String, dynamic> json) {
    imageUrl = json['image_url']?.toString();
    smallImageUrl = json['small_image_url']?.toString();
    largeImageUrl = json['large_image_url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['image_url'] = imageUrl;
    data['small_image_url'] = smallImageUrl;
    data['large_image_url'] = largeImageUrl;
    return data;
  }
}

class AnimeModelImagesJpg {
  String? imageUrl;
  String? smallImageUrl;
  String? largeImageUrl;

  AnimeModelImagesJpg({
    this.imageUrl,
    this.smallImageUrl,
    this.largeImageUrl,
  });
  AnimeModelImagesJpg.fromJson(Map<String, dynamic> json) {
    imageUrl = json['image_url']?.toString();
    smallImageUrl = json['small_image_url']?.toString();
    largeImageUrl = json['large_image_url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['image_url'] = imageUrl;
    data['small_image_url'] = smallImageUrl;
    data['large_image_url'] = largeImageUrl;
    return data;
  }
}

class AnimeModelImages {
  AnimeModelImagesJpg? jpg;
  AnimeModelImagesWebp? webp;

  AnimeModelImages({
    this.jpg,
    this.webp,
  });
  AnimeModelImages.fromJson(Map<String, dynamic> json) {
    jpg = (json['jpg'] != null)
        ? AnimeModelImagesJpg.fromJson(json['jpg'])
        : null;
    webp = (json['webp'] != null)
        ? AnimeModelImagesWebp.fromJson(json['webp'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (jpg != null) {
      data['jpg'] = jpg!.toJson();
    }
    if (webp != null) {
      data['webp'] = webp!.toJson();
    }
    return data;
  }
}

class AnimeModel {
  int? malId;
  String? url;
  AnimeModelImages? images;
  AnimeModelTrailer? trailer;
  bool? approved;
  List<AnimeModelTitles?>? titles;
  String? title;
  String? titleEnglish;
  String? titleJapanese;
  List<String?>? titleSynonyms;
  String? type;
  String? source;
  int? episodes;
  String? status;
  bool? airing;
  AnimeModelAired? aired;
  String? duration;
  String? rating;
  double? score;
  int? scoredBy;
  int? rank;
  int? popularity;
  int? members;
  int? favorites;
  String? synopsis;
  String? background;
  String? season;
  int? year;
  AnimeModelBroadcast? broadcast;
  List<AnimeModelProducers?>? producers;
  List<AnimeModelStudios?>? studios;
  List<AnimeModelGenres?>? genres;
  List<AnimeModelDemographics?>? demographics;

  AnimeModel({
    this.malId,
    this.url,
    this.images,
    this.trailer,
    this.approved,
    this.titles,
    this.title,
    this.titleEnglish,
    this.titleJapanese,
    this.titleSynonyms,
    this.type,
    this.source,
    this.episodes,
    this.status,
    this.airing,
    this.aired,
    this.duration,
    this.rating,
    this.score,
    this.scoredBy,
    this.rank,
    this.popularity,
    this.members,
    this.favorites,
    this.synopsis,
    this.background,
    this.season,
    this.year,
    this.broadcast,
    this.producers,
    this.studios,
    this.genres,
    this.demographics,
  });
  AnimeModel.fromJson(Map<String, dynamic> json) {
    malId = json['mal_id']?.toInt();
    url = json['url']?.toString();
    images = (json['images'] != null)
        ? AnimeModelImages.fromJson(json['images'])
        : null;
    trailer = (json['trailer'] != null)
        ? AnimeModelTrailer.fromJson(json['trailer'])
        : null;
    approved = json['approved'];
    if (json['titles'] != null) {
      final v = json['titles'];
      final arr0 = <AnimeModelTitles>[];
      v.forEach((v) {
        arr0.add(AnimeModelTitles.fromJson(v));
      });
      titles = arr0;
    }
    title = json['title']?.toString();
    titleEnglish = json['title_english']?.toString();
    titleJapanese = json['title_japanese']?.toString();
    if (json['title_synonyms'] != null) {
      final v = json['title_synonyms'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      titleSynonyms = arr0;
    }
    type = json['type']?.toString();
    source = json['source']?.toString();
    episodes = json['episodes']?.toInt();
    status = json['status']?.toString();
    airing = json['airing'];
    aired = (json['aired'] != null)
        ? AnimeModelAired.fromJson(json['aired'])
        : null;
    duration = json['duration']?.toString();
    rating = json['rating']?.toString();
    score = json['score']?.toDouble();
    scoredBy = json['scored_by']?.toInt();
    rank = json['rank']?.toInt();
    popularity = json['popularity']?.toInt();
    members = json['members']?.toInt();
    favorites = json['favorites']?.toInt();
    synopsis = json['synopsis']?.toString();
    background = json['background']?.toString();
    season = json['season']?.toString();
    year = json['year']?.toInt();
    broadcast = (json['broadcast'] != null)
        ? AnimeModelBroadcast.fromJson(json['broadcast'])
        : null;
    if (json['producers'] != null) {
      final v = json['producers'];
      final arr0 = <AnimeModelProducers>[];
      v.forEach((v) {
        arr0.add(AnimeModelProducers.fromJson(v));
      });
      producers = arr0;
    }
    if (json['studios'] != null) {
      final v = json['studios'];
      final arr0 = <AnimeModelStudios>[];
      v.forEach((v) {
        arr0.add(AnimeModelStudios.fromJson(v));
      });
      studios = arr0;
    }
    if (json['genres'] != null) {
      final v = json['genres'];
      final arr0 = <AnimeModelGenres>[];
      v.forEach((v) {
        arr0.add(AnimeModelGenres.fromJson(v));
      });
      genres = arr0;
    }
    if (json['demographics'] != null) {
      final v = json['demographics'];
      final arr0 = <AnimeModelDemographics>[];
      v.forEach((v) {
        arr0.add(AnimeModelDemographics.fromJson(v));
      });
      demographics = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['mal_id'] = malId;
    data['url'] = url;
    if (images != null) {
      data['images'] = images!.toJson();
    }
    if (trailer != null) {
      data['trailer'] = trailer!.toJson();
    }
    data['approved'] = approved;
    if (titles != null) {
      final v = titles;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['titles'] = arr0;
    }
    data['title'] = title;
    data['title_english'] = titleEnglish;
    data['title_japanese'] = titleJapanese;
    if (titleSynonyms != null) {
      final v = titleSynonyms;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v);
      }
      data['title_synonyms'] = arr0;
    }
    data['type'] = type;
    data['source'] = source;
    data['episodes'] = episodes;
    data['status'] = status;
    data['airing'] = airing;
    if (aired != null) {
      data['aired'] = aired!.toJson();
    }
    data['duration'] = duration;
    data['rating'] = rating;
    data['score'] = score;
    data['scored_by'] = scoredBy;
    data['rank'] = rank;
    data['popularity'] = popularity;
    data['members'] = members;
    data['favorites'] = favorites;
    data['synopsis'] = synopsis;
    data['background'] = background;
    data['season'] = season;
    data['year'] = year;
    if (broadcast != null) {
      data['broadcast'] = broadcast!.toJson();
    }
    if (producers != null) {
      final v = producers;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['producers'] = arr0;
    }
    if (studios != null) {
      final v = studios;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['studios'] = arr0;
    }
    if (genres != null) {
      final v = genres;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['genres'] = arr0;
    }
    if (demographics != null) {
      final v = demographics;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['demographics'] = arr0;
    }
    return data;
  }
}
